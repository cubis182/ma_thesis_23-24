somefunc <- function(x = (), y = (), z = ())
somefunc <- function(x, y, z) {
c(x, y, z)
}
num = 5
str = "hi"
str
log = FALSE
function(num, str, log)
somefunc(num, str, log)
collection <- somefunc(num, str, log)
collection
collection[1]
collection[0]
collection[4]
collection[0]
?character
number <- (1, 2, 3, 54)
number <- c(1, 2, 3, 54)
number[0]
collection <- c(5, TRUE, FALSE)
collection[0]
collection
collection(5, "hi", 0)
c(5, "hi", 0)
c("false", FALSE, TRUE)
somefunc-b <- function(raw-freq, corpus-tot) {
somefunc-b <- function(raw_freq, corpus_tot) {
return (raw_freq / corpus_tot)*100
}
somefunc_b <- function(raw_freq, corpus_tot) {
return (raw_freq / corpus_tot)*100
}
somefunc_b(366, 14000)
366/14000
(366 / 14000)*100
somefunc_b <- function(raw_freq, corpus_tot) {
return ((raw_freq / corpus_tot) * 100)
}
somefun_b(366, 14000)
somefunc_b(366, 14000)
source(choose.files())
mypercentage(36, 250)
percentage(36, 250)
somefunc_b(36, 432)
source(choose.files())
source(choose.files())
source(choose.files())
somefunc_b(36, 243)
somefunc_b(35, 245)
?round
source(C:\Users\T470s\Documents\2023 Summer\R\978-3-319-64570-4\CLSR\chap 02\mypercentage.r)
cd
help([[)
help("[[")
help.start()
q()
head(cl.order)
head(cl.order)
#practice
#G+P p. 379 uses ggplot2 for visualizations
#note in your dataset TYPEB is binary
cl.order <- read.csv('parataxis-12.3.23.csv')
setwd("C:/Users/T470s/Documents/GitHub/ma_thesis_23-24/Data-output/var-info")
head(cl.order)
#practice
#G+P p. 379 uses ggplot2 for visualizations
#note in your dataset TYPEB is binary
cl.order <- read.csv('parataxis-12.3.23.csv')
cl.order
head(cl.order)
summary(cl.order)
str(cl.order)
